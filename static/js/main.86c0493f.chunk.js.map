{"version":3,"sources":["api/user.js","api/index.js","utils/storage.js","const/storageKeys.js","store/UserContext.jsx","components/Login/LoginForm.jsx","views/Login.jsx","api/order.js","components/Orders/OrdersForm.jsx","components/TranslationImages.jsx","hoc/withAuth.jsx","views/Orders.jsx","components/Profile/ProfileHeader.jsx","components/Profile/ProfileActions.jsx","components/Profile/ProfileOrderHistoryItem.jsx","components/Profile/ProfileOrderHistory.jsx","views/Profile.jsx","components/Navbar/Navbar.jsx","App.jsx","reportWebVitals.js","store/AppContext.jsx","index.js"],"names":["apiUrl","process","checkForUser","username","a","fetch","response","ok","Error","json","data","message","createUser","method","headers","body","JSON","stringify","orders","loginUser","checkError","user","length","pop","userById","userId","storageSave","key","value","sessionStorage","setItem","STORAGE_KEY_USER","UserContext","createContext","useUser","useContext","UserProvider","children","useState","getItem","parse","storageRead","state","setUser","Provider","usernameConfig","required","minLength","maxLength","LoginForm","useForm","register","handleSubmit","errors","formState","navigate","useNavigate","loading","setLoading","apiError","setApiError","useEffect","console","log","onSubmit","error","userResponse","errorMessage","type","id","htmlFor","placeholder","disabled","Login","orderAdd","order","result","orderClearHistory","OrdersForm","onOrder","orderNotes","TranslationImages","translateText","images","split","map","char","index","src","alt","withAuth","Component","props","to","translation","setTranslation","handleOrderClicked","currentTranslation","alert","updatedUser","ProfileHeader","ProfileActions","logout","handleClearHistoryClick","window","confirm","onClick","className","ProfileOrderHistoryItem","ProfileOrderHistory","orderList","findUser","latestUser","Navbar","removeItem","App","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","AppContext","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.86c0493f.chunk.js","sourcesContent":["import { createHeaders } from \"./index\"\n\nexport const apiUrl = process.env.REACT_APP_API_URL\n\n\nconst checkForUser = async (username) => {\n    try {\n        const response = await fetch(`${apiUrl}?username=${username}`)\n        if (!response.ok) {\n            throw new Error('Could not complete request.')\n        }\n        const data = await response.json()\n        return [ null, data ]\n    }\n    catch (error) {\n        return [ error.message, [] ]\n    }\n}\n\nconst createUser = async (username) => {\n    try {\n        const response = await fetch(apiUrl, {\n            method: 'POST',\n            headers: createHeaders(),\n            body: JSON.stringify({\n                username,\n                orders: []\n            })\n        })\n        if (!response.ok) {\n            throw new Error('Could not create user. ' + username, ' is already taken!')\n        }\n        const data = await response.json()\n        return [ null, data ]\n    }\n    catch (error) {\n        return [ error.message, [] ]\n    }\n}\n\nexport const loginUser = async (username) => {\n    const [ checkError, user ] = await checkForUser(username)\n\n    if (checkError !== null) {\n        return [checkError, null]\n    }\n\n    if (user.length > 0) { \n        return [ null, user.pop() ]\n    }\n\n    return await createUser(username)\n}\n\nexport const userById = async (userId) => {\n    try {\n        const response = await fetch( `${apiUrl}/${userId}` )\n        if (!response.ok) {\n            throw new Error('Could not fetch user')\n        }\n        const user = await response.json()\n        return [ null, user ]\n    }\n    catch (error) {\n        return [ error.message, null ]\n    }\n}","const apiKey = process.env.REACT_APP_API_KEY\n\nexport const createHeaders = () => {\n    return {\n        'Content-Type': 'application/json',\n        'x-api-key': apiKey\n    }\n}\n","export const storageSave = (key, value) => {\n    sessionStorage.setItem(key, JSON.stringify(value))\n}\n\nexport const storageRead = key => {\n    const data = sessionStorage.getItem(key)\n    if (data) {\n        return JSON.parse(data)\n    }\n    \n    return null\n}\n\nexport const storageDelete = key => {\n    sessionStorage.removeItem(key)\n}","export const STORAGE_KEY_USER = 'coffee-user'","import { createContext, useContext, useState } from \"react\"\nimport { STORAGE_KEY_USER } from \"../const/storageKeys\"\nimport { storageRead } from \"../utils/storage\"\n\nconst UserContext = createContext()\n\nexport const useUser = () => {\n    return useContext(UserContext)\n}\n\nconst UserProvider = ({children}) => {\n\n    const [ user, setUser ] = useState( storageRead( STORAGE_KEY_USER ) )\n\n    const state = {\n        user, \n        setUser\n    }\n\n    return (\n        <UserContext.Provider value={ state }>\n            { children }\n        </UserContext.Provider>\n    )\n}\n\nexport default UserProvider;","import { useForm } from 'react-hook-form'\nimport { loginUser } from '../../api/user'\nimport { useState, useEffect } from 'react'\nimport { storageSave } from '../../utils/storage'\nimport { useNavigate } from 'react-router-dom'\nimport { useUser } from '../../store/UserContext'\nimport { STORAGE_KEY_USER } from '../../const/storageKeys'\nimport './Login.css'\n\nconst usernameConfig = {\n    required: true,\n    minLength: 3,\n    maxLength: 10\n}\n\n\n\nconst LoginForm = () => {\n\n    const {\n        register, \n        handleSubmit,\n        formState: { errors }\n\n    } = useForm();\n\n    const { user, setUser} = useUser()\n\n    const navigate = useNavigate()\n\n    const [ loading, setLoading ] = useState(false)\n    const [ apiError, setApiError ] = useState(null)\n\n    useEffect(() => {\n        if (user !== null) {\n            navigate('orders')\n        }\n\n        console.log('User has changed!', user)\n    }, [ user, navigate ])\n\n    const onSubmit = async ({ username }) => {\n        setLoading(true)\n        const [error, userResponse] = await loginUser(username)\n        if (error) {\n            setApiError(error)\n        }\n        if (userResponse !== null) {\n            storageSave( STORAGE_KEY_USER, userResponse)\n            setUser(userResponse)\n        }\n        setLoading(false)\n    };\n\n    const errorMessage = (() => {\n        if (!errors.username) {\n            return null\n        }\n        if (errors.username.type === 'required') {\n            return <span> A valid username is required</span>\n        }\n        if (errors.username.type === 'minLength') {\n            return <span>The username is too short!</span>\n        }\n        if (errors.username.type === 'maxLength') {\n            return <span>The username is too long!</span>\n        }\n    })()\n\n    return (\n        <>\n            <h2>What is your name?</h2>\n            <form onSubmit={ handleSubmit(onSubmit) }>\n                <fieldset id=\"field\">\n                    <label htmlFor=\"username\" id=\"label\">Username:</label>\n                    <input id=\"input\"\n                        type=\"text\" \n                        placeholder=\"John Doe\"\n                        { ...register(\"username\", usernameConfig) } />\n                        { errorMessage }\n                </fieldset>\n\n                <button type=\"submit\" disabled = {loading} id=\"loginButton\">Continue</button>\n\n            { loading && <p id=\"loading\">Logging in...</p> }\n            { apiError && <p>{ apiError }</p> }\n\n            </form>\n        </>\n    )\n}\n\nexport default LoginForm;","import LoginForm from \"../components/Login/LoginForm\";\n\nconst Login = () => {\n    return (\n        <>\n            <LoginForm />\n        </>\n    )\n}\n\nexport default Login","import { createHeaders } from \".\"\nimport { apiUrl } from \"./user\"\n\nexport const orderAdd = async ( user, order ) => {\n    try {\n        const response = await fetch(`${ apiUrl }/${ user.id }`, {\n            method: 'PATCH',\n            headers: createHeaders(),\n            body: JSON.stringify({\n                username: user.username,\n                orders: [ ...user.orders, order ]\n            })\n        })\n\n        if ( !response.ok ) {\n            throw new Error ('Could not update the request')\n        }\n\n        const result = await response.json()\n        return [ null, result ]\n    }\n    catch (error) {\n        return [ error.message, null ]\n    }\n\n}\n\nexport const orderClearHistory = async ( userId ) => {\n    try {\n        const response = await fetch(`${apiUrl}/${userId}`, {\n            method: 'PATCH',\n            headers: createHeaders(),\n            body: JSON.stringify({\n                orders: []\n            })\n        })\n\n        if ( !response.ok ) {\n            throw new Error('Could not update orders')\n        }\n\n        const result = await response.json()\n\n        return [ null, result ]\n\n    } catch (error) {\n        return [ error.message, null ]\n    }\n}","import { useForm } from \"react-hook-form\"\nimport './OrdersForm.css'\n\nconst OrdersForm = ({onOrder}) => {\n    const { register, handleSubmit } = useForm()\n\n    const onSubmit = ({ orderNotes }) => { onOrder(orderNotes) }\n\n    return (\n        <form onSubmit={ handleSubmit(onSubmit) }>\n            <fieldset>\n                <label htmlFor=\"order-notes\" id=\"searchTag\">Search:</label>\n                <input type=\"text\"  { ...register('orderNotes') } placeholder=\"Type something!\" />\n            </fieldset>\n\n            <button id=\"submitButton\" type=\"submit\">Submit</button>\n        </form>\n    )\n}\n\nexport default OrdersForm","\n  const TranslationImages = ({ translateText = [] }) => {\n    const images = translateText.split('').map((char, index) => {\n        return <img key={ index + char } src={ 'img/' + char + '.png' } alt={ char } />\n      })\n      \n      return (\n        <section>\n          { images }\n        </section>\n      );\n}\n\nexport default TranslationImages\n","import { Navigate } from \"react-router-dom\"\nimport { useUser } from \"../store/UserContext\"\n\nconst withAuth = Component => props => {\n    const { user }  = useUser()\n    if (user !== null) {\n        return <Component { ...props } />\n    } else {\n        return <Navigate to=\"/\" />\n    }\n}\n\nexport default withAuth","import { useState } from \"react\"\nimport { orderAdd } from \"../api/order\"\nimport OrdersForm from \"../components/Orders/OrdersForm\"\nimport TranslationImages from \"../components/TranslationImages\"\nimport { STORAGE_KEY_USER } from \"../const/storageKeys\"\nimport withAuth from \"../hoc/withAuth\"\nimport { useUser } from \"../store/UserContext\"\nimport { storageSave } from \"../utils/storage\"\nimport './Orders.css'\n\n\nconst Orders = () => {\n\n    const [ translation, setTranslation ] = useState('')\n    const { user, setUser } = useUser()\n\n    const handleOrderClicked = async (currentTranslation) => {\n        console.log(currentTranslation)\n        if (!currentTranslation) {\n            alert ('Please form a word or sentence')\n            return\n        }\n\n        const [ error, updatedUser ] = await orderAdd(user, currentTranslation)\n        if (error !== null ) {\n            return\n        }\n\n        setTranslation(currentTranslation)\n        storageSave(STORAGE_KEY_USER, updatedUser)\n        setUser(updatedUser)\n\n        console.log('Error', error);\n        console.log('result', updatedUser);\n    }\n\n    \n\n    return (\n        <>\n            <h1>Sign Alphabet</h1>\n\n            <section id=\"order-notes\">\n                <OrdersForm onOrder={ handleOrderClicked } />\n            </section>\n            <h4 id=\"result\">Result: </h4>\n            { translation && <TranslationImages translateText={ translation }/> }\n        </>\n    )\n}\n\nexport default withAuth(Orders)","const ProfileHeader = ({ username }) => {\n    return (\n        <header>\n            <h4>Hello, welcome back {username} </h4>\n        </header>\n    )\n}\n\nexport default ProfileHeader\n\n","import { orderClearHistory } from \"../../api/order\"\nimport { STORAGE_KEY_USER } from \"../../const/storageKeys\"\nimport { useUser } from \"../../store/UserContext\"\nimport { storageSave } from \"../../utils/storage\"\nimport './Action.css'\n\n\n\nconst ProfileActions = ({ logout }) => {\n\n    const { user, setUser } = useUser()\n\n    const handleClearHistoryClick = async () => {\n        if ( !window.confirm('Are you sure?\\n This can not be undone!') ) {\n            return\n        }\n\n        const [ clearError ] = await orderClearHistory(user.id)\n\n        if (clearError !== null ) {\n            return\n        }\n\n        const updatedUser = {\n            ...user,\n            orders: []\n        }\n\n        storageSave( STORAGE_KEY_USER, updatedUser )\n\n        setUser( updatedUser )\n    }\n\n    return (\n        <ul>\n            <li><button onClick={ handleClearHistoryClick } id=\"clearButton\" className=\"history\">Clear history</button></li>\n        </ul>\n    )\n\n    \n}\n\nexport default ProfileActions","const ProfileOrderHistoryItem = ({ order }) => {\n    return <p> { order } </p>\n}\n\nexport default ProfileOrderHistoryItem","import ProfileOrderHistoryItem from \"./ProfileOrderHistoryItem\"\nimport './Action.css'\n\nconst ProfileOrderHistory = ({ orders = [] }) => {\n    const orderList = orders.map(\n        (order, index) => <ProfileOrderHistoryItem key={ index + order } order={ order } />)\n\n    return (\n        <>\n        <p className=\"history\" id=\"prevSearch\">Previous searches:</p>\n        <section id=\"section\">\n            <ul>\n                <li>\n                { orderList}\n                </li>\n            </ul>\n        </section>\n        </>\n    )\n}\n\nexport default ProfileOrderHistory","import ProfileHeader from \"../components/Profile/ProfileHeader\"\nimport ProfileActions from \"../components/Profile/ProfileActions\"\nimport withAuth from \"../hoc/withAuth\"\nimport ProfileOrderHistory from \"../components/Profile/ProfileOrderHistory\"\nimport { useUser } from \"../store/UserContext\"\nimport { useEffect } from \"react/cjs/react.development\"\nimport { userById } from \"../api/user\"\nimport { storageSave } from \"../utils/storage\"\nimport { STORAGE_KEY_USER } from \"../const/storageKeys\"\nimport './Profile.css'\n\nconst Profile = () => {\n\n    const { user, setUser } = useUser()\n\n    useEffect(() => {\n        const findUser = async () => {\n            const [ error, latestUser ] = await userById(user.id)\n            if (error === null) {\n                storageSave(STORAGE_KEY_USER, latestUser)\n                setUser(latestUser)\n            }\n        }\n\n        findUser()\n\n    }, [ setUser, user.id ])\n\n\n    return (\n        <>\n            <h1>Profile</h1>\n            <ProfileHeader username={ user.username } />\n            <ProfileActions />\n            <ProfileOrderHistory orders={ user.orders } />\n        </>\n    )\n}\n\nexport default withAuth(Profile)","import { NavLink } from \"react-router-dom\"\nimport { useUser } from \"../../store/UserContext\"\nimport { STORAGE_KEY_USER } from \"../../const/storageKeys\"\nimport { storageDelete } from \"../../utils/storage\"\nimport './Navbar.css'\n\n\n\n\n\nconst Navbar = () => {\n\n    const { user, setUser } = useUser()\n\n    const handleLogoutClick = () => {\n        if (window.confirm('Are you certain?')) {\n            storageDelete(STORAGE_KEY_USER)\n            setUser(null)\n        }\n    }\n\n    return (\n        <nav className=\"navbar\">\n            <ul>\n                <li id=\"tag\">The Amazing Translator</li>\n            </ul>\n\n\n            { user !== null &&\n                <>\n                <ul>\n                <li className=\"nav1\">\n                    <NavLink to=\"/orders\">Translator</NavLink>\n                </li>\n                <li className=\"nav1\">\n                    <NavLink to=\"/profile\">Profile</NavLink>\n                </li>\n                </ul>\n                <button id=\"logOut\" onClick={ handleLogoutClick }>Log out</button>\n                </>\n            }\n        </nav>\n    )\n}\n\n\nexport default Navbar\n\n","import './App.css';\nimport {\n  BrowserRouter,\n  Routes,\n  Route,\n} from 'react-router-dom';\nimport Login from './views/Login';\nimport Orders from './views/Orders';\nimport Profile from './views/Profile';\nimport Navbar from './components/Navbar/Navbar';\n\nfunction App() {\n\n\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <Navbar />\n         <Routes>\n           <Route path=\"/\" element={ <Login /> } />\n           <Route path=\"/Orders\" element={ < Orders /> } />\n           <Route path=\"/Profile\" element={ < Profile /> } />\n         </Routes>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import UserProvider from \"./UserContext\"\n\nconst AppContext = ({children}) => {\n    return (\n        <UserProvider>\n            { children }\n        </UserProvider>\n    )\n}\n\nexport default AppContext;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport AppContext from './store/AppContext';\n\nReactDOM.render(\n  <React.StrictMode>\n    \n    <AppContext>\n      <App />\n    </AppContext>\n\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}